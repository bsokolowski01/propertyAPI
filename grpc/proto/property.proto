syntax = "proto3";

package propertyAPI;

import "google/protobuf/timestamp.proto";

message Filter {
  string field = 1;
  string eq_string = 2;
  string neq_string = 3;
  string contains = 4;
  string notContains = 5;
  double eq_number = 6;
  double neq_number = 7;
  double gt = 8;
  double lt = 9;
  double gte = 10;
  double lte = 11;
  string eq_date = 12;
  string neq_date = 13;
  string gt_date = 14;
  string lt_date = 15;
  string gte_date = 16;
  string lte_date = 17;
}

message Sort {
  string field = 1;
  bool ascending = 2;
}

message Pagination {
  int32 page = 1;
  int32 pageSize = 2;
}

message Query {
  repeated Filter filters = 1;
  repeated Sort sorts = 2;
  Pagination pagination = 3;
}

// Clients
service ClientService {
  rpc ReadClient (ClientId) returns (Client);
  rpc ReadClients (Query) returns (Clients);
  rpc CreateClient (Client) returns (Client);
  rpc UpdateClient (Client) returns (Client);
  rpc DeleteClient (ClientId) returns (DeleteClientResponse);
}

message ClientId {
  int32 id = 1;
}

message Client {
  int32 id = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
  string address = 5;
}

message Clients {
  repeated Client clients = 1;
}

message DeleteClientResponse {
  bool deleted = 1;
}

// Property
service PropertyService {
  rpc ReadProperty (PropertyId) returns (Property);
  rpc ReadProperties (Query) returns (Properties);
  rpc CreateProperty (Property) returns (Property);
  rpc UpdateProperty (Property) returns (Property);
  rpc DeleteProperty (PropertyId) returns (DeletePropertyResponse);
}

message PropertyId {
  int32 id = 1;
}

message Property {
  int32 id = 1;
  string address = 2;
  string description = 3;
  int32 rooms = 4;
  string surfaceArea = 5;
  string status = 6;
  string type = 7;
  optional string rent = 8;
  optional string price = 9;
  optional string pricePerMeter = 10;
}

message Properties {
  repeated Property properties = 1;
}

message DeletePropertyResponse {
  bool deleted = 1;
}

// Reservation
service ReservationService {
  rpc ReadReservation (ReservationId) returns (Reservation);
  rpc ReadReservations (Query) returns (Reservations);
  rpc CreateReservation (Reservation) returns (Reservation);
  rpc UpdateReservation (Reservation) returns (Reservation);
  rpc DeleteReservation (ReservationId) returns (DeleteReservationResponse);
}

message ReservationId {
  int32 id = 1;
}

message Reservation {
  int32 id = 1;
  int32 propertyId = 2;
  int32 clientId = 3;
  ReservationDate date = 4;
}

message ReservationDate {
  string start = 1;
  string end = 2;
}

message Reservations {
  repeated Reservation reservations = 1;
}

message DeleteReservationResponse {
  bool deleted = 1;
}